steps:
- task: CMake@1
  displayName: 'Generate'
  inputs:
    workingDirectory: cmake-build
    cmakeArgs: $(CMAKE_GENERATE_ARGS) -DCMAKE_INSTALL_PREFIX=$(Build.SourcesDirectory)/SDK -DCMAKE_BUILD_TYPE=RelWithDebInfo -DURHO3D_SAMPLES=ON -DURHO3D_CSHARP=$(URHO3D_CSHARP) -DURHO3D_PACKAGING=ON -DBUILD_SHARED_LIBS=$(BUILD_SHARED_LIBS) $(Build.SourcesDirectory)

# VS2017, VS2019 may not honor build dependencies of custom targets if we invoke build through cmake, therefore we use
# msbuild directly in this case.
- script: |
    cd cmake-build
    msbuild /t:restore rbfx.sln
    msbuild /p:Configuration=Release rbfx.sln
  condition: eq(variables['MSBUILD'], '1')

- task: CMake@1
  displayName: 'Build'
  inputs:
    workingDirectory: cmake-build
    cmakeArgs: --build . --config Release $(CMAKE_BUILD_ARGS)
  condition: ne(variables['MSBUILD'], '1')

# --build . is technically not necessary, but web builds somehow insist on installing
# CMakeFiles/CMakeRelink.dir/Samples.html instead of bin/Samples.html so just let installation step link it for now.
- task: CMake@1
  displayName: 'Install SDK'
  inputs:
    workingDirectory: cmake-build
    cmakeArgs: --build . --target install --config Release

- publish: $(Build.SourcesDirectory)/SDK
  artifact: rbfx-SDK-$(Agent.JobName)-$(Build.SourceVersion)

